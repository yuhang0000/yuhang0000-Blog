name: 自動更新提交日期

# 觸發條件: 等 pages build and deployment 搞完。
on:
  workflow_run:
    workflows: ["pages-build-deployment"]
    types:
      - completed
      
# 觸發條件: 當有推送（push）事件到 main 分支時觸發此工作流。

# on:
#   push:
#     branches:
#       - main

# 任務: 
jobs:
  update-file:
    runs-on: ubuntu-latest
    # 打點注釋，如果部署發起者是 github-pages 的話直接不幹了。
    if: ${{ github.actor != 'github-pages' }}
    
    permissions:
      contents: write

    # 使用 GitHub API 更新文件内容。
    steps:
    - name: 創建文件夾
      run: mkdir -p ./Config/
    
    - name: 更新 Config/UpdateTime.txt 文檔
      uses: actions/github-script@v6
      with:
        script: |
          //完全不會學這個, 交給通義寫叭。
        
          // 引用外部庫
          let fs = require('fs');
          // let github = require('@actions/github');
          // let context = require('@actions/github');
          // let { context, github } = require('@actions/github');

          //獲取當前時間
          function gettime(){
            let now = new Date();
            
            //時區 +08:00
            now = now.valueOf() + (3600 * 1000 * 8);
            now = new Date(now);
            
            let nowtime = now.getFullYear() + "-" + (now.getMonth() + 1) + "-" + now.getDate() + " " + now.getHours() + ":" + String(now.getMinutes()).padStart(2, '0') + ":" + String(now.getSeconds()).padStart(2, '0');
            return nowtime;
          }
          
          console.log("# " + gettime() + " | 準備嘗試。。。");
          let content = Buffer.from(gettime()).toString('base64');

          //嘗試先更新
          try{

            //這裏獲取sha, 完全不會呀😭, 還得感謝通義。
            let response = await github.rest.repos.getContent({
              ...context.repo,
              path: "Config/UpdateTime.txt"
            });

            let sha = response.data.sha;
            
            await github.rest.repos.createOrUpdateFileContents({
              ...context.repo,
              path: "Config/UpdateTime.txt",
              message: "更新最後一次提交日期",
              content: content,
              sha: sha,
              branch: context.ref.replace('refs/heads/', '')
            });
          }
          catch(err){
            console.log("# " + gettime() + " | 遇到错误了欸, 嘗試直接創建新文檔: \r\n" + err.stack);
            trywrite();
          }

          async function trywrite(){
            try {
              // 寫入文檔
              //fs.writeFileSync("${process.env.GITHUB_WORKSPACE}/config", nowtime);

                await github.rest.repos.createOrUpdateFileContents({
                  ...context.repo,
                  path: "Config/UpdateTime.txt",
                  message: "更新最後一次提交日期",
                  content: content,
                  branch: context.ref.replace('refs/heads/', '')
                });
            }
            catch(err){
              console.log("# " + gettime() + " | 遇到错误了欸: \r\n" + err.stack);
            }
          }
          
          console.log("# " + gettime() + " | 完成咯! ");       
